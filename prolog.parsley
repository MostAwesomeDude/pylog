identifier = spaces? <(letter | '_')+>

variable = identifier:i ?(i[0].isupper()) -> Variable(i)

params = '(' (variable | functor):head (',' (variable | functor))*:tail ')'
       -> [head] + tail if tail else [head]

functor = identifier:f ?(not f[0].isupper()) params?:p
        -> Functor(f, tuple(p)) if p else (f, ())

fact = functor:f spaces? '.' -> f

rule = functor:f spaces? ':' '-' functor:head (spaces? ',' functor)*:tail
       spaces? '.'
     -> f + ([head] + tail if tail else [head],)
